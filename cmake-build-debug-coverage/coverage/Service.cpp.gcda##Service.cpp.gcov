        -:    0:Source:/home/octav/CLionProjects/LAB9OOP/Service.cpp
        -:    0:Graph:/home/octav/CLionProjects/LAB9OOP/cmake-build-debug-coverage/CMakeFiles/LAB9OOP.dir/Service.cpp.gcno
        -:    0:Data:/home/octav/CLionProjects/LAB9OOP/cmake-build-debug-coverage/CMakeFiles/LAB9OOP.dir/Service.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include <algorithm>
        -:    3:#include <chrono>
        -:    4:#include "Service.h"
        -:    5:
function _ZN7ServiceC2ERK19MovieRepositoryFileRK9Validator called 2 returned 100% blocks executed 55%
        2:    6:Service::Service( const MovieRepositoryFile& repo, const Validator &validator) {
        2:    6-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
        2:    7:    this->repo = repo;
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:    8:    this->validator = validator;
        2:    9:}
        2:    9-block  0
    $$$$$:    9-block  1
call    0 never executed
    $$$$$:    9-block  2
call    1 never executed
    $$$$$:    9-block  3
call    2 never executed
        -:   10:
function _ZN7Service8addMovieERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_iS7_ called 9 returned 78% blocks executed 72%
        9:   11:void Service::addMovie(const string &title, const string &genre, int year, const string &mainActor) {
        9:   12:    Movie movie(title, genre, year, mainActor);
        9:   12-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:   13:    this->validator.validateMovie(movie);
        9:   13-block  0
call    0 returned 9
branch  1 taken 8 (fallthrough)
branch  2 taken 1 (throw)
        8:   14:    this->repo.add(movie);
        8:   14-block  0
call    0 returned 8
branch  1 taken 7 (fallthrough)
branch  2 taken 1 (throw)
        7:   15:    UndoAdauga* undoAdauga = new UndoAdauga(this->repo, movie);
        7:   15-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   15-block  1
call    3 returned 7
branch  4 taken 7 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   15-block  2
call    6 never executed
        7:   16:    this->undoActions.push_back(unique_ptr<ActiuneUndo>(undoAdauga));
        7:   16-block  0
call    0 returned 7
call    1 returned 7
branch  2 taken 7 (fallthrough)
branch  3 taken 0 (throw)
        7:   16-block  1
call    4 returned 7
    $$$$$:   16-block  2
call    5 never executed
    $$$$$:   16-block  3
        9:   17:}
call    0 returned 7
        2:   17-block  0
call    1 returned 2
        -:   18:
function _ZN7Service11removeMovieERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_iS7_ called 6 returned 83% blocks executed 71%
        6:   19:void Service::removeMovie(const string &title, const string &genre, int year, const string &mainActor) {
        6:   20:    Movie movie(title, genre, year, mainActor);
        6:   20-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   21:    this->repo.remove(movie);
        6:   21-block  0
call    0 returned 6
branch  1 taken 5 (fallthrough)
branch  2 taken 1 (throw)
        5:   22:    UndoSterge* undoSterge = new UndoSterge(this->repo, movie);
        5:   22-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   22-block  1
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   22-block  2
call    6 never executed
        5:   23:    this->undoActions.push_back(unique_ptr<ActiuneUndo>(undoSterge));
        5:   23-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:   23-block  1
call    4 returned 5
    $$$$$:   23-block  2
call    5 never executed
    $$$$$:   23-block  3
        6:   24:}
call    0 returned 5
        1:   24-block  0
call    1 returned 1
        -:   25:
function _ZN7Service11updateMovieERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_iS7_ called 4 returned 50% blocks executed 81%
        4:   26:void Service::updateMovie(const string &title, const string &genre, int year, const string &mainActor) {
        4:   27:    Movie movie(title, genre, year, mainActor);
        4:   27-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   28:    int index = this->repo.find(movie);
        4:   28-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   29:    Movie oldMovie;
        4:   29-block  0
call    0 returned 4
        4:   30:    if (index != -1) {
branch  0 taken 3 (fallthrough)
branch  1 taken 1
        3:   31:        oldMovie = this->repo.getMovie(index);
        3:   31-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   31-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        -:   32:    }
        4:   33:    this->validator.validateMovie(movie);
        4:   33-block  0
call    0 returned 4
branch  1 taken 3 (fallthrough)
branch  2 taken 1 (throw)
        3:   34:    this->repo.update(movie);
        3:   34-block  0
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1 (throw)
        2:   35:    UndoModifica* undoModifica = new UndoModifica(this->repo, oldMovie);
        2:   35-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   35-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   35-block  2
call    6 never executed
        2:   36:    this->undoActions.push_back(unique_ptr<ActiuneUndo>(undoModifica));
        2:   36-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   36-block  1
call    4 returned 2
    $$$$$:   36-block  2
call    5 never executed
    $$$$$:   36-block  3
        6:   37:}
call    0 returned 2
call    1 returned 2
        2:   37-block  0
call    2 returned 2
        2:   37-block  1
call    3 returned 2
        -:   38:
function _ZNK7Service6getAllEv called 3 returned 100% blocks executed 100%
        3:   39:const vector<Movie> &Service::getAll() const {
        3:   40:    return this->repo.getAll();
        3:   40-block  0
call    0 returned 3
        -:   41:}
        -:   42:
function _ZNK7Service4sizeEv called 1 returned 100% blocks executed 100%
        1:   43:int Service::size() const {
        1:   44:    return this->repo.size();
        1:   44-block  0
call    0 returned 1
        -:   45:}
        -:   46:
function _ZNK7Service8getMovieEi called 3 returned 100% blocks executed 100%
        3:   47:const Movie &Service::getMovie(int index) const {
        3:   48:    return this->repo.getMovie(index);
        3:   48-block  0
call    0 returned 3
        -:   49:}
        -:   50:
function _ZNK7Service4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 52%
        1:   51:int Service::find(const string & title) const {
        2:   52:    Movie movie(title, "", 0, "");
        1:   52-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   52-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   52-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:   52-block  3
    $$$$$:   52-block  4
    $$$$$:   52-block  5
    $$$$$:   52-block  6
        2:   53:    return this->repo.find(movie);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  0
        1:   53-block  1
        1:   54:}
        1:   54-block  0
call    0 returned 1
    $$$$$:   54-block  1
call    1 never executed
        -:   55:
function _ZN7Service16getMoviesByTitleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 67%
        1:   56:vector<Movie> Service::getMoviesByTitle(const string& title) {
        1:   57:    vector<Movie> movies = repo.getAll();
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   58:    vector<Movie> moviesByTitle;
        1:   58-block  0
call    0 returned 1
function _ZZN7Service16getMoviesByTitleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlRK5MovieE_clESA_ called 3 returned 100% blocks executed 100%
        1:   59:    copy_if(movies.begin(), movies.end(), back_inserter(moviesByTitle), [title](const Movie&  movie) {
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   59-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   59-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   59-block  2
call   11 returned 1
    $$$$$:   59-block  3
call   12 never executed
    $$$$$:   59-block  4
        3:   60:        return movie.getTitle() == title;
        3:   60-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
        -:   61:    });
        2:   62:    return moviesByTitle;
        1:   62-block  0
        1:   63:}
        1:   63-block  0
call    0 returned 1
    $$$$$:   63-block  1
call    1 never executed
    $$$$$:   63-block  2
call    2 never executed
        -:   64:
function _ZN7Service15getMoviesByYearEi called 1 returned 100% blocks executed 75%
        1:   65:vector<Movie> Service::getMoviesByYear(int year) {
        1:   66:    vector<Movie> movies = repo.getAll();
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   67:    vector<Movie> moviesByYear;
        1:   67-block  0
call    0 returned 1
function _ZZN7Service15getMoviesByYearEiENKUlRK5MovieE_clES2_ called 3 returned 100% blocks executed 100%
        1:   68:    copy_if(movies.begin(), movies.end(), back_inserter(moviesByYear), [year](const Movie&  movie) {
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68-block  0
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        3:   69:        return movie.getYear() == year;
        3:   69-block  0
call    0 returned 3
        -:   70:    });
        2:   71:    return moviesByYear;
        1:   71-block  0
        1:   71-block  1
        1:   72:}
        1:   72-block  0
call    0 returned 1
    $$$$$:   72-block  1
call    1 never executed
    $$$$$:   72-block  2
call    2 never executed
        -:   73:
function _ZN7Service17sortMoviesByTitleEb called 2 returned 100% blocks executed 92%
        2:   74:vector<Movie> Service::sortMoviesByTitle(bool ascending) {
        2:   75:    vector<Movie> movies = repo.getAll();
        2:   75-block  0
call    0 returned 2
call    1 returned 2
        2:   76:    if (ascending) {
branch  0 taken 1 (fallthrough)
branch  1 taken 1
function _ZZN7Service17sortMoviesByTitleEbENKUlRK5MovieS2_E_clES2_S2_ called 5 returned 100% blocks executed 80%
        1:   77:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:   77-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        5:   78:            return movie1.getTitle() < movie2.getTitle();
        5:   78-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:   78-block  1
call    4 returned 5
call    5 returned 5
call    6 returned 5
        5:   78-block  2
    $$$$$:   78-block  3
call    7 never executed
        -:   79:        });
        -:   80:    } else {
function _ZZN7Service17sortMoviesByTitleEbENKUlRK5MovieS2_E0_clES2_S2_ called 4 returned 100% blocks executed 80%
        1:   81:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:   81-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        4:   82:            return movie1.getTitle() > movie2.getTitle();
        4:   82-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:   82-block  1
call    4 returned 4
call    5 returned 4
call    6 returned 4
        4:   82-block  2
    $$$$$:   82-block  3
call    7 never executed
        -:   83:        });
        -:   84:    }
        2:   85:    return movies;
        2:   85-block  0
        2:   85-block  1
    =====:   86:}
    $$$$$:   86-block  0
call    0 never executed
        -:   87:
function _ZN7Service17sortMoviesByGenreEb called 2 returned 100% blocks executed 92%
        2:   88:vector<Movie> Service::sortMoviesByGenre(bool ascending) {
        2:   89:    vector<Movie> movies = repo.getAll();
        2:   89-block  0
call    0 returned 2
call    1 returned 2
        2:   90:    if (ascending) {
branch  0 taken 1 (fallthrough)
branch  1 taken 1
function _ZZN7Service17sortMoviesByGenreEbENKUlRK5MovieS2_E_clES2_S2_ called 5 returned 100% blocks executed 80%
        1:   91:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:   91-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        5:   92:            return movie1.getGenre() < movie2.getGenre();
        5:   92-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:   92-block  1
call    4 returned 5
call    5 returned 5
call    6 returned 5
        5:   92-block  2
    $$$$$:   92-block  3
call    7 never executed
        -:   93:        });
        -:   94:    } else {
function _ZZN7Service17sortMoviesByGenreEbENKUlRK5MovieS2_E0_clES2_S2_ called 4 returned 100% blocks executed 80%
        1:   95:        sort(movies.begin(), movies.end(), [](const Movie& movie1, const Movie&  movie2) {
        1:   95-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        4:   96:            return movie1.getGenre() > movie2.getGenre();
        4:   96-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:   96-block  1
call    4 returned 4
call    5 returned 4
call    6 returned 4
        4:   96-block  2
    $$$$$:   96-block  3
call    7 never executed
        -:   97:        });
        -:   98:    }
        2:   99:    return movies;
        2:   99-block  0
        2:   99-block  1
    =====:  100:}
    $$$$$:  100-block  0
call    0 never executed
        -:  101:
function _ZN7Service16sortMoviesByYearEb called 2 returned 100% blocks executed 92%
        2:  102:vector<Movie> Service::sortMoviesByYear(bool ascending) {
        2:  103:    vector<Movie> movies = repo.getAll();
        2:  103-block  0
call    0 returned 2
call    1 returned 2
        2:  104:    if (ascending) {
branch  0 taken 1 (fallthrough)
branch  1 taken 1
function _ZZN7Service16sortMoviesByYearEbENKUlRK5MovieS2_E_clES2_S2_ called 5 returned 100% blocks executed 100%
        1:  105:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:  105-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        5:  106:            return movie1.getYear() < movie2.getYear();
        5:  106-block  0
call    0 returned 5
call    1 returned 5
        -:  107:        });
        -:  108:    } else {
function _ZZN7Service16sortMoviesByYearEbENKUlRK5MovieS2_E0_clES2_S2_ called 4 returned 100% blocks executed 100%
        1:  109:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:  109-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        4:  110:            return movie1.getYear() > movie2.getYear();
        4:  110-block  0
call    0 returned 4
call    1 returned 4
        -:  111:        });
        -:  112:    }
        2:  113:    return movies;
        2:  113-block  0
        2:  113-block  1
    =====:  114:}
    $$$$$:  114-block  0
call    0 never executed
        -:  115:
function _ZN7Service21sortMoviesByMainActorEb called 2 returned 100% blocks executed 92%
        2:  116:vector<Movie> Service::sortMoviesByMainActor(bool ascending) {
        2:  117:    vector<Movie> movies = repo.getAll();
        2:  117-block  0
call    0 returned 2
call    1 returned 2
        2:  118:    if (ascending) {
branch  0 taken 1 (fallthrough)
branch  1 taken 1
function _ZZN7Service21sortMoviesByMainActorEbENKUlRK5MovieS2_E_clES2_S2_ called 5 returned 100% blocks executed 80%
        1:  119:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:  119-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        5:  120:            return movie1.getMainActor() < movie2.getMainActor();
        5:  120-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  120-block  1
call    4 returned 5
call    5 returned 5
call    6 returned 5
        5:  120-block  2
    $$$$$:  120-block  3
call    7 never executed
        -:  121:        });
        -:  122:    } else {
function _ZZN7Service21sortMoviesByMainActorEbENKUlRK5MovieS2_E0_clES2_S2_ called 4 returned 100% blocks executed 80%
        1:  123:        sort(movies.begin(), movies.end(), [](const Movie&  movie1, const Movie&  movie2) {
        1:  123-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        4:  124:            return movie1.getMainActor() > movie2.getMainActor();
        4:  124-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:  124-block  1
call    4 returned 4
call    5 returned 4
call    6 returned 4
        4:  124-block  2
    $$$$$:  124-block  3
call    7 never executed
        -:  125:        });
        -:  126:    }
        2:  127:    return movies;
        2:  127-block  0
        2:  127-block  1
    =====:  128:}
    $$$$$:  128-block  0
call    0 never executed
        -:  129:
function _ZN7Service14addToWatchlistERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_iS7_ called 3 returned 33% blocks executed 100%
        3:  130:void Service::addToWatchlist(const string& title, const string& genre, int year, const string& mainActor) {
        3:  131:    Movie movie = Movie(title, genre, year, mainActor);
        3:  131-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  132:    validator.validateMovie(movie);
        3:  132-block  0
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1 (throw)
        2:  133:    watchlist.add(movie);
        2:  133-block  0
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1 (throw)
        3:  134:}
        1:  134-block  0
call    0 returned 1
        2:  134-block  1
call    1 returned 2
        -:  135:
function _ZN7Service19deleteFromWatchlistERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 0% blocks executed 48%
        1:  136:void Service::deleteFromWatchlist(const string& title) {
        2:  137:    Movie movie =  Movie(title, "", 0, "");
        1:  137-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  137-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  137-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:  137-block  3
    $$$$$:  137-block  4
    $$$$$:  137-block  5
    $$$$$:  137-block  6
        1:  138:    watchlist.remove(movie);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
       1*:  139:}
    %%%%%:  139-block  0
call    0 never executed
        1:  139-block  1
call    1 returned 1
        -:  140:
function _ZN7Service12getWatchlistEv called 2 returned 100% blocks executed 100%
        2:  141:vector<Movie> Service::getWatchlist() {
        2:  142:    return watchlist.getAll();
        2:  142-block  0
call    0 returned 2
call    1 returned 2
        -:  143:}
        -:  144:
function _ZN7Service17generateWatchlistEi called 1 returned 100% blocks executed 82%
        1:  145:void Service::generateWatchlist(int numberOfMovies) {
        -:  146:    //Generate numberOfMovies random titles, genre, year and mainActor and add them to the watchlist
        -:  147:
        1:  148:    auto seed = chrono::steady_clock::now().time_since_epoch().count();
        1:  148-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  149:    srand(seed);
call    0 returned 1
        -:  150:
        3:  151:    for (int i = 0; i < numberOfMovies; i++) {
        3:  151-block  0
branch  0 taken 2
branch  1 taken 1 (fallthrough)
        -:  152:        //Generate random titles using seed
        2:  153:        string title;
        2:  153-block  0
call    0 returned 2
        2:  154:        int titleLength = rand() % 20 + 1;
call    0 returned 2
       35:  155:        for (int j = 0; j < titleLength; j++) {
       33:  155-block  0
       35:  155-block  1
branch  0 taken 33
branch  1 taken 2 (fallthrough)
       33:  156:            title += (char) (rand() % 26 + 97);
       33:  156-block  0
call    0 returned 33
call    1 returned 33
branch  2 taken 33 (fallthrough)
branch  3 taken 0 (throw)
        -:  157:        }
        -:  158:
        -:  159:        //Generate random genre
        2:  160:        string genre;
        2:  160-block  0
call    0 returned 2
        2:  161:        int genreLength = rand() % 20 + 1;
call    0 returned 2
        6:  162:        for (int j = 0; j < genreLength; j++) {
        4:  162-block  0
        6:  162-block  1
branch  0 taken 4
branch  1 taken 2 (fallthrough)
        4:  163:            genre += (char) (rand() % 26 + 97);
        4:  163-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        -:  164:        }
        -:  165:
        -:  166:        //Generate random year
        2:  167:        int year = rand() % 200 + 1900;
        2:  167-block  0
call    0 returned 2
        -:  168:
        -:  169:        //Generate random mainActor
        2:  170:        string mainActor;
call    0 returned 2
        2:  171:        int mainActorLength = rand() % 20 + 1;
call    0 returned 2
       18:  172:        for (int j = 0; j < mainActorLength; j++) {
       16:  172-block  0
       18:  172-block  1
branch  0 taken 16
branch  1 taken 2 (fallthrough)
       16:  173:            mainActor += (char) (rand() % 26 + 97);
       16:  173-block  0
call    0 returned 16
call    1 returned 16
branch  2 taken 16 (fallthrough)
branch  3 taken 0 (throw)
        -:  174:        }
        -:  175:
        2:  176:        Movie movie = Movie(title, genre, year, mainActor);
        2:  176-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  177:        watchlist.add(movie);
        2:  177-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  178:    }
        2:  178-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
    $$$$$:  178-block  1
call    4 never executed
    $$$$$:  178-block  2
call    5 never executed
    $$$$$:  178-block  3
call    6 never executed
    $$$$$:  178-block  4
call    7 never executed
        -:  179:
        1:  180:}
        1:  180-block  0
        -:  181:
function _ZN7Service19saveWatchlistToFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 62%
        1:  182:void Service::saveWatchlistToFile(const string& filename) {
        1:  183:    ofstream file(filename);
        1:  183-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  184:    if (!file.is_open()) {
        1:  184-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  184-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:  185:        throw std::runtime_error("Could not open file");
    %%%%%:  185-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  185-block  1
call    4 never executed
    $$$$$:  185-block  2
call    5 never executed
        -:  186:    }
        1:  187:    vector<Movie> movies = watchlist.getAll();
        1:  187-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  187-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        4:  188:    for (const Movie& movie : movies) {
        1:  188-block  0
call    0 returned 1
call    1 returned 1
        3:  188-block  1
call    2 returned 3
        4:  188-block  2
call    3 returned 4
branch  4 taken 3
branch  5 taken 1 (fallthrough)
        6:  189:        file << movie.getTitle() << "," << movie.getGenre() << "," << movie.getYear() << "," << movie.getMainActor()
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  189-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:  189-block  1
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
        3:  189-block  2
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:  189-block  3
call   12 returned 3
branch 13 taken 3 (fallthrough)
branch 14 taken 0 (throw)
        3:  189-block  4
call   15 returned 3
branch 16 taken 3 (fallthrough)
branch 17 taken 0 (throw)
        3:  189-block  5
call   18 returned 3
branch 19 taken 3 (fallthrough)
branch 20 taken 0 (throw)
        3:  189-block  6
call   21 returned 3
branch 22 taken 3 (fallthrough)
branch 23 taken 0 (throw)
        3:  189-block  7
call   24 returned 3
branch 25 taken 3 (fallthrough)
branch 26 taken 0 (throw)
        3:  189-block  8
call   27 returned 3
branch 28 taken 3 (fallthrough)
branch 29 taken 0 (throw)
        3:  189-block  9
call   30 returned 3
branch 31 taken 3 (fallthrough)
branch 32 taken 0 (throw)
        3:  189-block 10
call   33 returned 3
call   34 returned 3
call   35 returned 3
call   36 returned 3
    $$$$$:  189-block 11
call   37 never executed
    $$$$$:  189-block 12
    $$$$$:  189-block 13
call   38 never executed
    $$$$$:  189-block 14
    $$$$$:  189-block 15
call   39 never executed
    $$$$$:  189-block 16
        3:  190:             << endl;
        3:  190-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:  191:    }
        1:  192:    file.close();
        1:  192-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  193:}
        1:  193-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  193-block  1
call    2 never executed
    $$$$$:  193-block  2
call    3 never executed
        -:  194:
function _ZN7Service6doUndoEv called 6 returned 83% blocks executed 92%
        6:  195:void Service::doUndo() {
        6:  196:    if (undoActions.empty()) {
        6:  196-block  0
call    0 returned 6
branch  1 taken 1 (fallthrough)
branch  2 taken 5
        1:  197:        throw std::runtime_error("No more undos");
        1:  197-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  197-block  1
call    4 returned 0
    $$$$$:  197-block  2
call    5 never executed
        -:  198:    }
        5:  199:    undoActions.back()->undo();
        5:  199-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
        5:  200:    undoActions.pop_back();
call    0 returned 5
        5:  201:}
